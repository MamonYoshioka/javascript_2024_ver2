/*
【関数宣言文】
関数宣言文は、以下のように関数の名前とその実行ブロックを指定して関数を定義します。
function hello() {
    console.log("こんにちは");
}

<特徴>
関数名が必須です。
関数の巻き上げ（Hoisting）が行われます。 
これは、関数宣言がコード内のどこにあっても、
スクリプトの実行前にJavaScriptエンジンによってメモリにロードされることを意味します。
そのため、関数宣言より前にその関数を呼び出すことができます。
*/

function add(a, b){
    return a + b;
}

console.log(add);
console.log(add.name);
console.log(add.length);


/*
【関数式】
関数式では、関数を変数に割り当てる形で定義します。
これは匿名関数（名前のない関数）を使用することも、名前付き関数を使用することもできます。

関数式は関数宣言文と異なり、変数を作り出すことはできない。
オブジェクトのみを作っている。
*/
let sayHi = function(){
    console.log('こんにちは');
}

sayHi();

/*
まとめ
関数宣言文は、関数全体が巻き上げられるため、定義前に呼び出すことが可能です。
関数式は、変数の巻き上げのみが行われるため、実際に関数が割り当てられる行が実行されるまで関数としては機能しません。
どちらの方法もJavaScriptで広く使われていますが、使用するシナリオによって選択が異なります。

*/

